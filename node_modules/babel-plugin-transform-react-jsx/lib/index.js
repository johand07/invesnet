"use strict";

exports.__esModule = true;
exports.default = _default;

var _babelPluginSyntaxJsx = _interopRequireDefault(require("babel-plugin-syntax-jsx"));

var _babelHelperBuilderReactJsx = _interopRequireDefault(require("babel-helper-builder-react-jsx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(_ref, options) {
  var t = _ref.types;
  var pragma = options.pragma;
  var id = pragma || "React.createElement";
  var JSX_ANNOTATION_REGEX = /\*?\s*@jsx\s+([^\s]+)/;
  var visitor = (0, _babelHelperBuilderReactJsx.default)({
    pre: function pre(state) {
      var tagName = state.tagName;
      var args = state.args;

      if (t.react.isCompatTag(tagName)) {
        args.push(t.stringLiteral(tagName));
      } else {
        args.push(state.tagExpr);
      }
    },
    post: function post(state, pass) {
      state.callee = pass.get("jsxIdentifier")();
    }
  });

  visitor.Program = function (path, state) {
    var file = state.file;
    var _arr = file.ast.comments;

    for (var _i = 0; _i < _arr.length; _i++) {
      var comment = _arr[_i];
      var matches = JSX_ANNOTATION_REGEX.exec(comment.value);

      if (matches) {
        id = matches[1];
        break;
      }
    }

    state.set("jsxIdentifier", function () {
      return id.split(".").map(function (name) {
        return t.identifier(name);
      }).reduce(function (object, property) {
        return t.memberExpression(object, property);
      });
    });
  };

  visitor.JSXAttribute = function (path) {
    if (t.isJSXElement(path.node.value)) {
      path.node.value = t.jSXExpressionContainer(path.node.value);
    }
  };

  return {
    inherits: _babelPluginSyntaxJsx.default,
    visitor: visitor
  };
}